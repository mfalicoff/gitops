# First, add namespace definition with security labels
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/warn: privileged
---
# CRDs Application
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack-crds
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  destination:
    name: in-cluster
    namespace: monitoring
  project: default
  source:
    repoURL: https://github.com/prometheus-community/helm-charts.git
    path: charts/kube-prometheus-stack/crds/
    targetRevision: kube-prometheus-stack-66.2.1
    directory:
      recurse: true
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - Replace=true
    automated:
      prune: true
      selfHeal: true
---
# Main Application
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  destination:
    name: in-cluster
    namespace: monitoring
  project: default
  source:
    repoURL: 'https://prometheus-community.github.io/helm-charts'
    targetRevision: 66.2.1
    helm:
      skipCrds: true
      values: |-
        prometheus-node-exporter:
          hostNetwork: true
          hostPID: true
          securityContext:
            privileged: true
            runAsUser: 0
            runAsNonRoot: false
          extraArgs:
            - --path.rootfs=/host
          hostRootFs: true
          tolerations:
            - operator: "Exists"
          volumes:
            - name: proc
              hostPath:
                path: /proc
            - name: sys
              hostPath:
                path: /sys
            - name: root
              hostPath:
                path: /
          securityContext:
            privileged: true
            runAsUser: 0
            runAsNonRoot: false
        global:
          rbac:
            create: true
            pspEnabled: false
    chart: kube-prometheus-stack
  syncPolicy:
    automated:
      prune: true
      selfHeal: true